[{"content":" Ensure the prerequisites  An AWS Account AWS cli installed, instructions for the same can be found here. Have generated credentials (access key and secret), can be created from here.  Setting up AWS CLI Type aws configure on the terminal and enter the Access Key ID and Secret Access Key, other fields can be blank.\nCreating a config file for terraform to understand  Create a directory and switch to it Create a file named main.tf and populate it with the following sample configuration, where  app_server is the name of the instance us-west-2 is the region where the instance will be deployed ami-830c94e3 is the unique identifier for the instance t2.micro is the instance type ExampleAppServerInstance is the tag name for grouping of instances    terraform { required_providers { aws = { source = \u0026#34;hashicorp/aws\u0026#34; version = \u0026#34;~\u0026gt; 3.27\u0026#34; } } required_version = \u0026#34;\u0026gt;= 0.14.9\u0026#34; } provider \u0026#34;aws\u0026#34; { profile = \u0026#34;default\u0026#34; region = \u0026#34;us-west-2\u0026#34; } resource \u0026#34;aws_instance\u0026#34; \u0026#34;app_server\u0026#34; { ami = \u0026#34;ami-830c94e3\u0026#34; instance_type = \u0026#34;t2.micro\u0026#34; tags = { Name = \u0026#34;ExampleAppServerInstance\u0026#34; } } Installation of and Working with Terraform CLI:  Terraform can be installed following this guide Configuration of terraform CLI can be done using command terraform init The configuration file can be formatted using terraform fmt command And the file can be validated using terraform validate command Finally all the changes can be viewed using terraform plan command and perfomed using terraform apply command  Here is a terminal cast performing the above actions   ","date":"2021-06-27T00:00:00Z","image":"https://kyteinsky.github.io/p/installing-terraform-and-creating-an-ec2-instance/terraform-logo-extended_hu9aa061a1aaf8d97b03487600ef22b7fc_104790_120x120_fill_q75_box_smart1.jpg","permalink":"https://kyteinsky.github.io/p/installing-terraform-and-creating-an-ec2-instance/","title":"Installing Terraform and Creating an EC2 Instance"},{"content":" Azure part of story  First create one Azure account, I am using a student account Create a basic instance (Ubuntu image works for most cases) with 1 vCPU and 1 GiB RAM, or according to your needs Download the private key and SSH into the instance Update the packages Install docker (following this guide)  Let\u0026rsquo;s move on to the local machine setup\n Local machine setup SSH Keys Setup  We need to install docker here as well Add ssh key (downloaded from Azure portal) to OpenSSH Auth agent  eval \u0026#39;ssh-agent\u0026#39; ssh-add \u0026lt;path-to-pem-file\u0026gt;/\u0026lt;file-name\u0026gt;.pem  (or) Add AddKeysToAgent yes to ~/.ssh/config file to automatically do that for you  echo \u0026#34;AddKeysToAgent yes\u0026#34; \u0026gt;\u0026gt; ~/.ssh/config  Docker Context Setup  Create a new docker context to talk to the docker in Azure instance with command  docker context create azure-box --docker \u0026#34;host=ssh://azureuser@\u0026lt;public-ip-of-instance\u0026gt;\u0026#34;  See all available contexts using docker context ls Switching to Azure docker is done using command docker context use azure-box and back to the local docker using docker context use default Now when we issue commands to docker as usual docker ps, it is directly communicating to the docker running in the Azure instance   Note: \u0026lsquo;azure-box\u0026rsquo; is just a name, can be replaced with anything of your choice\n 🎉 Now you have docker running in the cloud, accessible from the terminal Finally just for testing, we can spin up a Ubuntu container and bash into it:   ","date":"2021-06-15T00:00:00Z","image":"https://kyteinsky.github.io/p/hosting-docker-in-cloud-azure/rafael-garcin-sqZ4GeyYGx8-unsplash_hu124ff0668c422682b8055a7bbd405272_397209_120x120_fill_q75_box_smart1.jpg","permalink":"https://kyteinsky.github.io/p/hosting-docker-in-cloud-azure/","title":"Hosting Docker in Cloud (Azure)"},{"content":"How to add and commit changes in the and then push the changes to a remote repository (here GitHub) Outline of steps to be performed:  Change some files or create some Issuegit add \u0026lt;name of files\u0026gt;command to add files to be committed Then commit them using git commit -am \u0026lt;commit message\u0026gt;, here a is for all files, m is for message, and then you place your message for the changes (optional) Finally, push the changes to a remote repository  Let\u0026rsquo;s see this in action   ","date":"2021-06-11T00:00:00Z","image":"https://kyteinsky.github.io/p/git-add-git-commit-and-git-push/roman-synkevych-UT8LMo-wlyk-unsplash_hue2e581fbbca1ab8a23c99d56e2dd85e8_1034377_120x120_fill_q75_box_smart1.jpg","permalink":"https://kyteinsky.github.io/p/git-add-git-commit-and-git-push/","title":"Git Add, Git Commit and Git Push"},{"content":" Following a general approach for any theme, steps to be performed (following this article): Specific for the theme Stack: Click Here\n Get code for asciinema player  wget https://github.com/asciinema/asciinema-player/releases/download/v2.6.1/asciinema-player.css wget https://github.com/asciinema/asciinema-player/releases/download/v2.6.1/asciinema-player.js  Place them in static/css and static/js, where static is folder in the root dir of the website Copy the layouts/partials/_shared/head.html or layouts/partials/head/head.html from themes/\u0026lt;theme-name\u0026gt; directory to your website\u0026rsquo;s root directory with the same folder structure Do the same with layouts/_default/baseof.html Append this code block for css in layouts/partials/{head or _shared}/head.html  {{ if .Params.asciinema }} \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;{{ .Site.BaseURL }}css/asciinema-player.css\u0026#34; /\u0026gt; {{ end }}  And this for js in layouts/_default/baseof.html  {{ if .Params.asciinema }} \u0026lt;script defer src=\u0026#34;{{ .Site.BaseURL }}js/asciinema-player.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{ end }}  Now let\u0026rsquo;s make a shortcode for asciinema here: layouts/shortcodes/asciinema.html  One can change the default rows and columns attributes inside \u0026lt;asciinema-player\u0026gt; tag\n\u0026lt;p\u0026gt; \u0026lt;asciinema-player src=\u0026#34;/casts/{{ with .Get \u0026#34;key\u0026#34; }}{{ . }}{{ end }}\u0026#34; cols=\u0026#34;{{ if .Get \u0026#34;cols\u0026#34; }}{{ .Get \u0026#34;cols\u0026#34; }}{{ else }}640{{ end }}\u0026#34; rows=\u0026#34;{{ if .Get \u0026#34;rows\u0026#34; }}{{ .Get \u0026#34;rows\u0026#34; }}{{ else }}10{{ end }}\u0026#34; {{ if .Get \u0026#34;autoplay\u0026#34; }}autoplay=\u0026#34;{{ .Get \u0026#34;autoplay\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;preload\u0026#34; }}preload=\u0026#34;{{ .Get \u0026#34;preload\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;loop\u0026#34; }}loop=\u0026#34;{{ .Get \u0026#34;loop\u0026#34; }}\u0026#34;{{ end }} start-at=\u0026#34;{{ if .Get \u0026#34;start-at\u0026#34; }}{{ .Get \u0026#34;start-at\u0026#34; }}{{ else }}0{{ end }}\u0026#34; speed=\u0026#34;{{ if .Get \u0026#34;speed\u0026#34; }}{{ .Get \u0026#34;speed\u0026#34; }}{{ else }}1{{ end }}\u0026#34; {{ if .Get \u0026#34;idle-time-limit\u0026#34; }}idle-time-limit=\u0026#34;{{ .Get \u0026#34;idle-time-limit\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;poster\u0026#34; }}poster=\u0026#34;{{ .Get \u0026#34;poster\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;font-size\u0026#34; }}font-size=\u0026#34;{{ .Get \u0026#34;font-size\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;theme\u0026#34; }}theme=\u0026#34;{{ .Get \u0026#34;theme\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;title\u0026#34; }}title=\u0026#34;{{ .Get \u0026#34;title\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;author\u0026#34; }}author=\u0026#34;{{ .Get \u0026#34;author\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;author-url\u0026#34; }}author-url=\u0026#34;{{ .Get \u0026#34;author-url\u0026#34; }}\u0026#34;{{ end }} {{ if .Get \u0026#34;author-img-url\u0026#34; }}author-img-url=\u0026#34;{{ .Get \u0026#34;author-img-url\u0026#34; }}\u0026#34;{{ end }} \u0026gt;\u0026lt;/asciinema-player\u0026gt; \u0026lt;/p\u0026gt;  Finally create a new post and set asciinema = true in the metadata (for toml) And embed the asciinema cast as follows in the body part  {{\u0026lt; asciinema key=\u0026#34;demo-folder/demo-cast.cast\u0026#34; rows=\u0026#34;35\u0026#34; preload=\u0026#34;1\u0026#34; \u0026gt;}}  And don\u0026rsquo;t forget to put your .cast file in static/casts/demo-folder/democast.cast   First attempt at the task   Correcting the mistakes done above    For the Stack theme, the kind developer of the theme @zhixuan666 mentioned a more efficient way to do it. Here is his reply to the GitHub issue: link\n ","date":"2021-06-10T00:00:00Z","permalink":"https://kyteinsky.github.io/p/embedding-asciinema-in-hugo-websites/","title":"Embedding Asciinema in Hugo Websites"},{"content":"We create a new Hugo website in terminal and install a custom theme named Stack and create a sample page Outline of steps to be performed:  Create an empty hugo site with boilerplate code Initialize the site as a git repository Add the theme as a submodule to receive updates automatically, can be just cloned in place or downloaded and extracted at the right place manually Copy some example site\u0026rsquo;s posts and config file to the root folder of the website to edit them without disturbing the original theme files (these files override the respective default ones) Edit the config.yaml file as per requirements, and delete the config.toml file that was placed by hugo Create a new post with sone markdown text host the site locally  This might be the right moment to commit the changes as starting point of the repository. Here is the asciinema terminal cast:   ","date":"2021-06-01T00:00:00Z","image":"https://kyteinsky.github.io/p/new-hugo-website/hugo-logo-wide.svg","permalink":"https://kyteinsky.github.io/p/new-hugo-website/","title":"New Hugo Website"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用  思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n 图片  Photo by Florian Klauer on Unsplash   Photo by Luca Bravo on Unsplash \n Photo by Helena Hertz on Unsplash   Photo by Hudai Gayiran on Unsplash \n![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://kyteinsky.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"https://kyteinsky.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","image":"https://kyteinsky.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://kyteinsky.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n YouTube Privacy Enhanced Shortcode    Twitter Simple Shortcode .twitter-tweet { font: 14px/1.45 -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif; border-left: 4px solid #2b7bb9; padding-left: 1.5em; color: #555; } .twitter-tweet a { color: #2b7bb9; text-decoration: none; } blockquote.twitter-tweet a:hover, blockquote.twitter-tweet a:focus { text-decoration: underline; }  “In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”\n— Jan Tschichold pic.twitter.com/gcv7SrhvJb\n\u0026mdash; Graphic Design History (@DesignReviewed) January 17, 2019  Vimeo Simple Shortcode  .__h_video { position: relative; padding-bottom: 56.23%; height: 0; overflow: hidden; width: 100%; background: #000; } .__h_video img { width: 100%; height: auto; color: #000; } .__h_video .play { height: 72px; width: 72px; left: 50%; top: 50%; margin-left: -36px; margin-top: -36px; position: absolute; cursor: pointer; }  ","date":"2019-03-10T00:00:00Z","permalink":"https://kyteinsky.github.io/p/rich-content/","title":"Rich Content"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://kyteinsky.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://kyteinsky.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://kyteinsky.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","date":"2019-03-05T00:00:00Z","image":"https://kyteinsky.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://kyteinsky.github.io/p/emoji-support/","title":"Emoji Support"}]